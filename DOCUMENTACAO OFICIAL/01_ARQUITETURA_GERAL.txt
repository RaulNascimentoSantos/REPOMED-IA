========================================
REPOMED IA - ARQUITETURA GERAL DO SISTEMA
========================================

VISÃO GERAL:
-----------
RepoMed IA é um sistema simplificado de documentos médicos com compliance CFM/ANVISA.
Stack otimizada: Fastify + React + PostgreSQL para máxima performance.

OBJETIVOS PRINCIPAIS:
--------------------
1. Sistema de geração de documentos médicos digitais
2. Compliance com regulamentações CFM e ANVISA
3. Interface intuitiva para profissionais da saúde
4. Performance otimizada para uso em consultórios
5. Assinatura digital de documentos
6. Geração de PDF para impressão/compartilhamento

ARQUITETURA GERAL:
------------------

┌─────────────────────────────────────────────────────────┐
│                    FRONTEND (React)                     │
├─────────────────────────────────────────────────────────┤
│ • React 18 + Vite                                       │
│ • TailwindCSS para styling                              │
│ • React Query para estado/cache                         │
│ • React Hook Form para formulários                      │
│ • React Router para navegação                           │
│ • Lucide React para ícones                              │
│ • Axios para HTTP requests                              │
└─────────────────────────────────────────────────────────┘
                            │
                         HTTP/REST
                            │
┌─────────────────────────────────────────────────────────┐
│                   BACKEND (Fastify)                     │
├─────────────────────────────────────────────────────────┤
│ • Fastify framework                                      │
│ • REST API endpoints                                     │
│ • Template engine (Handlebars)                          │
│ • PDF generation (Puppeteer)                            │
│ • Validation & sanitization                             │
│ • Health monitoring                                      │
│ • Metrics collection                                     │
└─────────────────────────────────────────────────────────┘
                            │
                        SQL/ORM
                            │
┌─────────────────────────────────────────────────────────┐
│                 BANCO DE DADOS (PostgreSQL)             │
├─────────────────────────────────────────────────────────┤
│ • PostgreSQL 14+                                        │
│ • Tabelas: documents, templates, users                  │
│ • Índices otimizados para queries                       │
│ • Backup automático                                      │
│ • Compliance LGPD                                        │
└─────────────────────────────────────────────────────────┘

STACK TECNOLÓGICA REMOVIDA (MELHORIA 1):
----------------------------------------
❌ Next.js - Substituído por React + Vite (melhor performance)
❌ tRPC - Substituído por REST API simples
❌ Bun - Substituído por Node.js (maior compatibilidade)
❌ Temporal - Removido (complexidade desnecessária)
❌ Qdrant - Removido (não necessário para MVP)

BENEFÍCIOS DA ARQUITETURA SIMPLIFICADA:
--------------------------------------
✅ Latência reduzida
✅ Deploy simplificado
✅ Menor complexidade de desenvolvimento
✅ Melhor compatibilidade com ferramentas existentes
✅ Facilidade de manutenção
✅ Performance otimizada

FLUXO PRINCIPAL DE DADOS:
------------------------
1. Usuário acessa interface React
2. Seleciona template médico
3. Preenche dados do paciente/documento
4. Sistema valida dados no frontend
5. Envia requisição POST para API
6. Backend processa e salva no PostgreSQL
7. Sistema gera PDF usando template
8. Retorna documento para download/visualização

SEGURANÇA E COMPLIANCE:
----------------------
• Validação rigorosa de dados de entrada
• Sanitização de templates
• Compliance CFM (Conselho Federal de Medicina)
• Compliance ANVISA (Agência Nacional de Vigilância Sanitária)
• Compliance LGPD (Lei Geral de Proteção de Dados)
• Assinatura digital de documentos
• Logs de auditoria
• Backup automático de dados sensíveis

MONITORAMENTO E OBSERVABILIDADE:
------------------------------
• Health checks automáticos
• Métricas de performance (latência P95)
• Uptime monitoring
• Logs estruturados (JSON)
• Dashboard de métricas em tempo real

AMBIENTES:
----------
• Desenvolvimento: localhost (Vite + Fastify + PostgreSQL local)
• Produção: Deploy containerizado (Docker)
• Backup: Replicação automática de dados

PRÓXIMAS MELHORIAS PLANEJADAS:
-----------------------------
• Autenticação/autorização de usuários
• Sistema de assinatura digital
• Integração com certificados A1/A3
• Dashboard analytics avançado
• API para integração com sistemas terceiros
• App mobile (React Native)