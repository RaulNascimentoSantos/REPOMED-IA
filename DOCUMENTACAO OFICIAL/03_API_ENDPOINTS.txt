========================================
REPOMED IA - DOCUMENTAÇÃO API ENDPOINTS
========================================

BASE URL: http://localhost:8081
API VERSION: v1
CONTENT-TYPE: application/json

ENDPOINTS DISPONÍVEIS:
=====================

1. HEALTH & MONITORING
-----------------------

GET /health
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Verifica status do sistema   │
│ MÉTODO: GET                             │
│ AUTH: Não requerida                     │
│ PARÂMETROS: Nenhum                      │
└─────────────────────────────────────────┘

Response 200 OK:
{
  "status": "healthy",
  "timestamp": "2024-01-15T10:30:00.000Z",
  "services": {
    "database": "connected",
    "api": "running"
  }
}

Response 500 Error:
{
  "status": "unhealthy",
  "timestamp": "2024-01-15T10:30:00.000Z",
  "services": {
    "database": "disconnected",
    "api": "running"
  },
  "error": "Database connection failed"
}

GET /metrics
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Métricas do sistema          │
│ MÉTODO: GET                             │
│ AUTH: Não requerida                     │
│ PARÂMETROS: Nenhum                      │
└─────────────────────────────────────────┘

Response 200 OK:
{
  "documents_total": 150,
  "api_latency_p95": 45.2,
  "uptime": 86400,
  "templates_available": 5
}

2. TEMPLATES MÉDICOS
--------------------

GET /api/templates
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Lista todos os templates     │
│ MÉTODO: GET                             │
│ AUTH: Não requerida                     │
│ PARÂMETROS: Nenhum                      │
└─────────────────────────────────────────┘

Response 200 OK:
{
  "data": [
    {
      "id": "tpl_receita_simples",
      "name": "Receita Simples",
      "specialty": "clinica_geral",
      "version": "1.0.0",
      "fields": [
        {
          "id": "patient_name",
          "label": "Nome do Paciente",
          "type": "text",
          "required": true
        },
        {
          "id": "medications",
          "label": "Medicamentos",
          "type": "array",
          "required": true
        }
      ],
      "content": "RECEITUÁRIO MÉDICO\\n\\nPaciente: {{patient_name}}...",
      "compliance": {
        "cfm": true,
        "anvisa": true,
        "requires_signature": true
      }
    }
  ],
  "total": 5
}

GET /api/templates/:id
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Obtém template específico    │
│ MÉTODO: GET                             │
│ AUTH: Não requerida                     │
│ PARÂMETROS: id (path parameter)         │
└─────────────────────────────────────────┘

Response 200 OK:
{
  "data": {
    "id": "tpl_receita_simples",
    "name": "Receita Simples",
    "specialty": "clinica_geral",
    "version": "1.0.0",
    "fields": [...],
    "content": "...",
    "compliance": {...}
  }
}

Response 404 Not Found:
{
  "statusCode": 404,
  "error": "Not Found",
  "message": "Template não encontrado"
}

3. DOCUMENTOS MÉDICOS
---------------------

POST /api/documents
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Cria novo documento médico   │
│ MÉTODO: POST                            │
│ AUTH: Futuramente requerida             │
│ CONTENT-TYPE: application/json          │
└─────────────────────────────────────────┘

Request Body:
{
  "templateId": "tpl_receita_simples",
  "patient": {
    "name": "João Silva",
    "cpf": "123.456.789-00"
  },
  "fields": {
    "patient_name": "João Silva",
    "patient_cpf": "123.456.789-00",
    "medications": [
      {
        "name": "Dipirona",
        "dosage": "500mg",
        "frequency": "8/8h"
      }
    ],
    "instructions": "Tomar após as refeições",
    "valid_days": 30
  }
}

Response 201 Created:
{
  "data": {
    "id": "d3c9506e-2540-401a-8c35-9d6fcfbacd24",
    "templateId": "tpl_receita_simples",
    "patient": {
      "name": "João Silva",
      "cpf": "123.456.789-00"
    },
    "status": "draft",
    "createdAt": "2024-01-15T10:30:00.000Z",
    "updatedAt": "2024-01-15T10:30:00.000Z"
  }
}

Response 400 Bad Request:
{
  "statusCode": 400,
  "error": "Bad Request",
  "message": "Template ID é obrigatório"
}

GET /api/documents/:id
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Obtém documento específico   │
│ MÉTODO: GET                             │
│ AUTH: Futuramente requerida             │
│ PARÂMETROS: id (UUID)                   │
└─────────────────────────────────────────┘

Response 200 OK:
{
  "data": {
    "id": "d3c9506e-2540-401a-8c35-9d6fcfbacd24",
    "templateId": "tpl_receita_simples",
    "templateName": "Receita Simples",
    "patient": {
      "name": "João Silva",
      "cpf": "123.456.789-00"
    },
    "fields": {...},
    "status": "draft",
    "createdAt": "2024-01-15T10:30:00.000Z",
    "updatedAt": "2024-01-15T10:30:00.000Z",
    "content": "RECEITUÁRIO MÉDICO\\n\\nPaciente: João Silva..."
  }
}

GET /api/documents
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Lista documentos do usuário  │
│ MÉTODO: GET                             │
│ AUTH: Futuramente requerida             │
│ QUERY PARAMS: page, limit, status       │
└─────────────────────────────────────────┘

Query Parameters:
- page: número da página (padrão: 1)
- limit: itens per página (padrão: 10)
- status: filtro por status (draft, signed, error)

Response 200 OK:
{
  "data": [
    {
      "id": "...",
      "templateName": "Receita Simples",
      "patient": {...},
      "status": "draft",
      "createdAt": "...",
      "updatedAt": "..."
    }
  ],
  "pagination": {
    "page": 1,
    "limit": 10,
    "total": 50,
    "pages": 5
  }
}

4. GERAÇÃO DE PDF
-----------------

GET /api/documents/:id/pdf
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Gera PDF do documento        │
│ MÉTODO: GET                             │
│ AUTH: Futuramente requerida             │
│ RESPONSE: application/pdf               │
└─────────────────────────────────────────┘

Response 200 OK:
Content-Type: application/pdf
Content-Disposition: attachment; filename="receita-joao-silva.pdf"
[PDF Binary Data]

Response 404 Not Found:
{
  "statusCode": 404,
  "error": "Not Found",
  "message": "Documento não encontrado"
}

HEAD /api/documents/:id/pdf
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Verifica se PDF existe       │
│ MÉTODO: HEAD                            │
│ AUTH: Futuramente requerida             │
│ RESPONSE: Headers only                  │
└─────────────────────────────────────────┘

Response 200 OK: PDF existe
Response 404 Not Found: PDF não existe

5. ASSINATURA DIGITAL (FUTURO)
------------------------------

POST /api/documents/:id/sign
┌─────────────────────────────────────────┐
│ DESCRIÇÃO: Assina documento digitalmente│
│ MÉTODO: POST                            │
│ AUTH: Requerida                         │
│ STATUS: Planejado para próxima versão   │
└─────────────────────────────────────────┘

Request Body (Futuro):
{
  "certificate": "base64_certificate_data",
  "pin": "certificate_pin"
}

CÓDIGOS DE STATUS HTTP:
======================

200 OK - Requisição bem-sucedida
201 Created - Recurso criado com sucesso
400 Bad Request - Dados inválidos
401 Unauthorized - Autenticação necessária
403 Forbidden - Sem permissão
404 Not Found - Recurso não encontrado
422 Unprocessable Entity - Dados válidos mas não processáveis
500 Internal Server Error - Erro interno do servidor

HEADERS IMPORTANTES:
==================

Request Headers:
- Content-Type: application/json
- Authorization: Bearer <token> (futuro)
- Accept: application/json

Response Headers:
- Content-Type: application/json
- X-Request-ID: UUID da requisição
- X-Rate-Limit-Remaining: Requisições restantes (futuro)

RATE LIMITING (FUTURO):
=====================

Limite por IP:
- 100 requisições por minuto para endpoints de consulta
- 10 requisições por minuto para criação de documentos
- 5 requisições por minuto para geração de PDF

VERSIONAMENTO:
=============

Atual: v1 (implícito)
Futuro: Header "API-Version: v2"

EXEMPLOS DE USO COM CURL:
========================

# Listar templates
curl -X GET http://localhost:8081/api/templates

# Criar documento
curl -X POST http://localhost:8081/api/documents \
  -H "Content-Type: application/json" \
  -d '{
    "templateId": "tpl_receita_simples",
    "patient": {"name": "João Silva", "cpf": "123.456.789-00"},
    "fields": {"patient_name": "João Silva", "medications": [...]}
  }'

# Baixar PDF
curl -X GET http://localhost:8081/api/documents/UUID/pdf \
  -o documento.pdf